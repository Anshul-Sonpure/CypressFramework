{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-14T14:50:14.519Z",
    "end": "2023-09-14T14:50:18.805Z",
    "duration": 4286,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ffae9dbc-2eb3-48c2-bedd-cdfe23898c5e",
      "title": "",
      "fullFile": "cypress\\e2e\\demo.cy.js",
      "file": "cypress\\e2e\\demo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f40dd0e-0896-4590-b878-b87d775ee02b",
          "title": "Update",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate user is able to update existing products",
              "fullTitle": "Update Validate user is able to update existing products",
              "timedOut": null,
              "duration": 660,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "login(`${loginuser.email}`, `${loginuser.password}`).then(result => {\n  const accessToken = result.access_token; // Access the access_token\n  updateProduct(payload, accessToken, productId).then(response => {\n    statusCode = response.status; // Set the status code to statusCode\n    expect(statusCode).to.equal(200); // Assert the status code here\n    expect(response.body.quantity).to.eq(payload.quantity);\n    cy.logger('apitest', 'Validate user is able to create new products -- Test Passed');\n    cy.logger('apitest', JSON.stringify(response.body, null, 2));\n  });\n});",
              "err": {},
              "uuid": "e681a434-458c-4cf6-8e22-92594c997aef",
              "parentUUID": "9f40dd0e-0896-4590-b878-b87d775ee02b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Second Test: Wait for Status Code 200",
              "fullTitle": "Update Second Test: Wait for Status Code 200",
              "timedOut": null,
              "duration": 3017,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (statusCode == 200) {\n  cy.wait(2500);\n  // Now you can use 'statusCode' in your assertions or other tests\n  cy.request({\n    method: 'GET',\n    url: 'https://reqres.in/api/users?page=2'\n  }).then(response => {\n    expect(statusCode).to.equal(200);\n  });\n}",
              "err": {},
              "uuid": "3cb0c427-0d00-44a0-8009-727b6d0ffd90",
              "parentUUID": "9f40dd0e-0896-4590-b878-b87d775ee02b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Third Test: Another Test Block",
              "fullTitle": "Update Third Test: Another Test Block",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://reqres.in/api/users/2'\n}).then(response => {\n  expect(statusCode).to.equal(200);\n});",
              "err": {},
              "uuid": "91647bbf-5b49-4217-826d-96fe240ac58d",
              "parentUUID": "9f40dd0e-0896-4590-b878-b87d775ee02b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e681a434-458c-4cf6-8e22-92594c997aef",
            "3cb0c427-0d00-44a0-8009-727b6d0ffd90",
            "91647bbf-5b49-4217-826d-96fe240ac58d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3830,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/TestReport",
        "overwrite": false
      },
      "version": "6.2.0"
    }
  }
}