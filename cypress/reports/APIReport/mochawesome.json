{
  "stats": {
    "suites": 5,
    "tests": 11,
    "passes": 0,
    "pending": 0,
    "failures": 11,
    "start": "2023-09-12T17:03:45.736Z",
    "end": "2023-09-12T17:04:02.769Z",
    "duration": 17033,
    "testsRegistered": 11,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "60181853-ba71-4bbe-a39e-5ca263005c7e",
      "title": "",
      "fullFile": "cypress\\e2e\\apiTest.cy.js",
      "file": "cypress\\e2e\\apiTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "72b12bdb-03ba-4788-a7d2-a89d4c924289",
          "title": "Login to API to get valid access_token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login with correct email & password",
              "fullTitle": "Login to API to get valid access_token login with correct email & password",
              "timedOut": null,
              "duration": 1344,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Login to API to get valid access_token -- login with correct email & password (failed).png\"\n    ]\n  ]\n}",
              "code": "login(`${loginuser.email}`, `${loginuser.password}`).then(result => {\n  // Receive the object containing response and access_token\n  const response = result.response; // Access the entire response object\n  // Assert that the response status code is 200\n  expect(response.status).to.eq(200);\n  // Assert that the response body contains the 'access_token' property\n  expect(response.body).to.have.property('access_token').that.is.not.empty;\n  const responseBodyString = JSON.stringify(response.body, null, 2);\n  cy.logger('apitest', 'Validated login with correct email & password');\n  cy.logger('apitest', response.body.access_token);\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 200",
                "estack": "AssertionError: expected 502 to equal 200\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/loginUser.cy.js:13:35)",
                "diff": "- 502\n+ 200\n"
              },
              "uuid": "a72e4915-0367-44b6-9154-2958bb2aacce",
              "parentUUID": "72b12bdb-03ba-4788-a7d2-a89d4c924289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with incorrect email & password",
              "fullTitle": "Login to API to get valid access_token login with incorrect email & password",
              "timedOut": null,
              "duration": 716,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Login to API to get valid access_token -- login with incorrect email & password (failed).png\"\n    ]\n  ]\n}",
              "code": "login(`${loginuser.incorrectemail}`, `${loginuser.password}`).then(result => {\n  // Receive the object containing response and access_token\n  const response = result.response; // Access the entire response object\n  // Assert that the response status code is 200\n  expect(response.status).to.eq(401);\n  // Assert that the response body contains the 'access_token' property\n  expect(response.body.message).to.eq('Incorrect email or password');\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 401",
                "estack": "AssertionError: expected 502 to equal 401\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/loginUser.cy.js:26:35)",
                "diff": "- 502\n+ 401\n"
              },
              "uuid": "96c050a8-7c6b-4168-8ec6-dee0bfe21bdd",
              "parentUUID": "72b12bdb-03ba-4788-a7d2-a89d4c924289",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a72e4915-0367-44b6-9154-2958bb2aacce",
            "96c050a8-7c6b-4168-8ec6-dee0bfe21bdd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2060,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f46caaf-603d-467c-a340-ed201f1bb955",
          "title": "Get all products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET Request with Bearer Token",
              "fullTitle": "Get all products GET Request with Bearer Token",
              "timedOut": null,
              "duration": 730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Get all products -- GET Request with Bearer Token (failed).png\"\n    ]\n  ]\n}",
              "code": "// Call the login function to log in and get the access token\nlogin(`${loginuser.email}`, `${loginuser.password}`).then(result => {\n  const accessToken = result.access_token;\n  getproducts(accessToken).then(response => {\n    expect(response.status).to.eq(200); // validate status code as 200 OK\n    const productNames = JSONPath({\n      path: '$..name',\n      json: response.body\n    });\n    // Assertion for products\n    expect(productNames).to.include('Samsung Galaxy A23 Blue', 'Redmi 11 Prime 5G', 'Samsung Galaxy Flip 5G');\n    //logging the reponse in log file;\n    const responseBodyString = JSON.stringify(response.body, null, 2);\n    cy.logger('apitest', \"\\n\" + 'Validated products for getproduct call' + \"\\n\");\n    cy.logger('apitest', 'Response Body:\\n' + responseBodyString);\n  });\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 200",
                "estack": "AssertionError: expected 502 to equal 200\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/getProducts.cy.js:16:37)",
                "diff": "- 502\n+ 200\n"
              },
              "uuid": "0e4686df-8507-47ad-94bc-61d41a4ee521",
              "parentUUID": "9f46caaf-603d-467c-a340-ed201f1bb955",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validation on the request body",
              "fullTitle": "Get all products Validation on the request body",
              "timedOut": null,
              "duration": 1613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Get all products -- Validation on the request body (failed).png\"\n    ]\n  ]\n}",
              "code": "login(`${loginuser.email}`, `${loginuser.password}`).then(result => {\n  const accessToken = result.access_token;\n  getproducts(accessToken).then(response => {\n    expect(response.status).to.eq(200); // validate status code as 200 OK\n    const A23Price = JSONPath({\n      path: '$.[0].cost',\n      json: response.body\n    });\n    const M33Name = JSONPath({\n      path: '$.[2].name',\n      json: response.body\n    });\n    // Assertion for products\n    expect(M33Name[0]).to.equal('Samsung Galaxy M33 5G ');\n    expect(A23Price).to.deep.eq([18999]);\n    cy.log(JSON.stringify(response.body, null, 2));\n  });\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 200",
                "estack": "AssertionError: expected 502 to equal 200\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/getProducts.cy.js:38:37)",
                "diff": "- 502\n+ 200\n"
              },
              "uuid": "138e88a4-c4be-4072-a271-a199862cfa1e",
              "parentUUID": "9f46caaf-603d-467c-a340-ed201f1bb955",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validation for revoked access token",
              "fullTitle": "Get all products Validation for revoked access token",
              "timedOut": null,
              "duration": 546,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Get all products -- Validation for revoked access token (failed).png\"\n    ]\n  ]\n}",
              "code": "const accessToken = `${loginuser.revokedtoken}`;\ngetproducts(accessToken).then(response => {\n  // Assertion for the status code\n  expect(response.status).to.eq(401); // validate status code as 401\n  // Assertion for the error message\n  expect(response.body.message).to.eq('Error access_token is revoked');\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 401",
                "estack": "AssertionError: expected 502 to equal 401\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/getProducts.cy.js:53:33)",
                "diff": "- 502\n+ 401\n"
              },
              "uuid": "e3702179-4541-475d-b814-4606067b63fc",
              "parentUUID": "9f46caaf-603d-467c-a340-ed201f1bb955",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validation for no Auth Token Send",
              "fullTitle": "Get all products Validation for no Auth Token Send",
              "timedOut": null,
              "duration": 697,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Get all products -- Validation for no Auth Token Send (failed).png\"\n    ]\n  ]\n}",
              "code": "getproductswithouttoken().then(response => {\n  // Assertion for the status code\n  expect(response.status).to.eq(401); // validate status code as 401\n  // Assertion for the error message\n  expect(response.body.message).to.eq('Error in authorization format');\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 401",
                "estack": "AssertionError: expected 502 to equal 401\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/getProducts.cy.js:63:33)",
                "diff": "- 502\n+ 401\n"
              },
              "uuid": "fea2aff0-049e-4939-afb4-2ea7f7d6f97a",
              "parentUUID": "9f46caaf-603d-467c-a340-ed201f1bb955",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0e4686df-8507-47ad-94bc-61d41a4ee521",
            "138e88a4-c4be-4072-a271-a199862cfa1e",
            "e3702179-4541-475d-b814-4606067b63fc",
            "fea2aff0-049e-4939-afb4-2ea7f7d6f97a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3586,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2bcbf1f-6891-4cb2-bf61-1b1940523dcd",
          "title": "Create new products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate user is able to create new products",
              "fullTitle": "Create new products Validate user is able to create new products",
              "timedOut": null,
              "duration": 774,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Create new products -- Validate user is able to create new products (failed).png\"\n    ]\n  ]\n}",
              "code": "login(`${loginuser.email}`, `${loginuser.password}`).then(result => {\n  const accessToken = result.access_token; // Access the access_token\n  createProduct(payload, accessToken).then(response => {\n    expect(response.status).to.eq(201);\n    expect(response.body.name).to.eq(payload.name);\n    cy.logger('apitest', 'Validate user is able to create new products -- Test Passed');\n    cy.logger('apitest', JSON.stringify(response.body, null, 2));\n  });\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 201",
                "estack": "AssertionError: expected 502 to equal 201\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/postProduct.cy.js:22:35)",
                "diff": "- 502\n+ 201\n"
              },
              "uuid": "7387440b-09d3-4aff-b256-f79f884688fa",
              "parentUUID": "f2bcbf1f-6891-4cb2-bf61-1b1940523dcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7387440b-09d3-4aff-b256-f79f884688fa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3e89ef40-09a0-4510-a89f-9ffe0004429e",
          "title": "Update Products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate user is able to update existing products",
              "fullTitle": "Update Products Validate user is able to update existing products",
              "timedOut": null,
              "duration": 1860,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Update Products -- Validate user is able to update existing products (failed).png\"\n    ]\n  ]\n}",
              "code": "login(`${loginuser.email}`, `${loginuser.password}`).then(result => {\n  const accessToken = result.access_token; // Access the access_token\n  updateProduct(payload, accessToken, productId).then(response => {\n    expect(response.status).to.eq(200);\n    expect(response.body.quantity).to.eq(payload.quantity);\n    cy.logger('apitest', 'Validate user is able to update existing products -- Test Passed');\n    cy.logger('apitest', JSON.stringify(response.body, null, 2));\n  });\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 200",
                "estack": "AssertionError: expected 502 to equal 200\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/updateProduct.cy.js:22:47)",
                "diff": "- 502\n+ 200\n"
              },
              "uuid": "408184c3-ae3b-4ea9-8757-7680ff1a3b0b",
              "parentUUID": "3e89ef40-09a0-4510-a89f-9ffe0004429e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate if no auth token send",
              "fullTitle": "Update Products Validate if no auth token send",
              "timedOut": null,
              "duration": 3331,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Update Products -- Validate if no auth token send (failed).png\"\n    ]\n  ]\n}",
              "code": "cy.wait(2500);\nupdateProductwithoutToken(payload, productId).then(response => {\n  // Assertion for the status code\n  expect(response.status).to.eq(401); // validate status code as 401\n  // Assertion for the error message\n  expect(response.body.message).to.eq('Error in authorization format');\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 401",
                "estack": "AssertionError: expected 502 to equal 401\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/updateProduct.cy.js:34:39)",
                "diff": "- 502\n+ 401\n"
              },
              "uuid": "7f3b98e0-d8cd-4b94-8868-809e8ea4b4ea",
              "parentUUID": "3e89ef40-09a0-4510-a89f-9ffe0004429e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate if Token is revoked",
              "fullTitle": "Update Products Validate if Token is revoked",
              "timedOut": null,
              "duration": 3212,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Update Products -- Validate if Token is revoked (failed).png\"\n    ]\n  ]\n}",
              "code": "cy.wait(2500);\nconst accessToken = `${loginuser.revokedtoken}`;\nupdateProduct(payload, accessToken, productId).then(response => {\n  // Assertion for the status code\n  expect(response.status).to.eq(401); // validate status code as 401\n  // Assertion for the error message\n  expect(response.body.message).to.eq('Error access_token is revoked');\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 401",
                "estack": "AssertionError: expected 502 to equal 401\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/updateProduct.cy.js:46:39)",
                "diff": "- 502\n+ 401\n"
              },
              "uuid": "b6767c2f-d77e-45d4-a797-a859357da318",
              "parentUUID": "3e89ef40-09a0-4510-a89f-9ffe0004429e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "408184c3-ae3b-4ea9-8757-7680ff1a3b0b",
            "7f3b98e0-d8cd-4b94-8868-809e8ea4b4ea",
            "b6767c2f-d77e-45d4-a797-a859357da318"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8403,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a97a6da-f404-443d-aa4a-ec3db96c25e2",
          "title": "Delete Product",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate user is able to delete existing products",
              "fullTitle": "Delete Product Validate user is able to delete existing products",
              "timedOut": null,
              "duration": 1181,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\apiTest.cy.js\\\\Delete Product -- Validate user is able to delete existing products (failed).png\"\n    ]\n  ]\n}",
              "code": "login(`${loginuser.email}`, `${loginuser.password}`).then(result => {\n  const accessToken = result.access_token; // Access the access_token\n  deleteProduct(accessToken, productId).then(response => {\n    expect(response.status).to.eq(200);\n    cy.logger('apitest', 'Validate user is able to delete products -- Test Passed');\n    cy.logger('apitest', JSON.stringify(response.body, null, 2));\n  });\n});",
              "err": {
                "message": "AssertionError: expected 502 to equal 200",
                "estack": "AssertionError: expected 502 to equal 200\n    at Context.eval (webpack://cypressframework/./cypress/e2e/apiTest/deleteProducts.cy.js:16:47)",
                "diff": "- 502\n+ 200\n"
              },
              "uuid": "0a0c6d87-613a-44ae-929d-ee3ade8ebc4c",
              "parentUUID": "7a97a6da-f404-443d-aa4a-ec3db96c25e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0a0c6d87-613a-44ae-929d-ee3ade8ebc4c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1181,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/APIReport",
        "overwrite": false
      },
      "version": "6.2.0"
    }
  }
}